/* stylelint-disable no-descending-specificity */
@import 'zd-css-variables';

:root {
  /* stylelint-disable max-line-length */
  --zd-chk-active-background-color: color(var(--zd-color-black) alpha(5%));
  --zd-chk-active-border-color: var(--zd-color-pelorous);
  --zd-chk-active-transition:
    border-color .1s ease-in-out,
    background-color .1s ease-in-out,
    background-image .1s ease-in-out,
    color .1s ease-in-out;
  --zd-chk-checked-background:
    no-repeat
    center/100%
    svg-load('14-checkmark.svg', color: var(--zd-color-white))
    var(--zd-color-pelorous);
  --zd-chk-checked-color: var(--zd-color-pelorous);
  --zd-chk-checked-active-background-color: color(var(--zd-chk-checked-color) blackness(+10%));
  --zd-chk-checked-active-border-color: var(--zd-chk-checked-active-background-color);
  --zd-chk-disabled-background-color: var(--zd-color-gainsboro);
  --zd-chk-focused-background-color: var(--zd-color-white);
  --zd-chk-focused-border-color: var(--zd-color-pelorous);
  --zd-chk-focused-box-shadow:
    0 0 0 3px
    color(var(--zd-chk-focused-border-color) alpha(40%));
  --zd-chk-hovered-border-color: var(--zd-chk-focused-border-color);
  /* stylelint-enable max-line-length */
}

/* 1. No `.c-chk__input:focus` styling, since it prevents mimicking
 *    "focus-on-keyboard; blur-on-mouse" browser behavior.
 * 2. Class-chain specificity hack. */

@custom-selector :--chk-checked
  .c-chk.is-checked > .c-chk__label,
  .c-chk > .c-chk__input:checked ~ .c-chk__label;

:--chk-checked::after {
  background: var(--zd-chk-checked-background);
}

@custom-selector :--chk-hovered
  .c-chk.is-hovered > .c-chk__label,
  .c-chk > .c-chk__label:hover;

:--chk-hovered::before {
  border-color: var(--zd-chk-hovered-border-color);
}

@custom-selector :--chk-focused /* [1] */
  .c-chk.is-focused > .c-chk__label;

:--chk-focused::before {
  background-color: var(--zd-chk-focused-background-color);
}

:--chk-focused::after {
  outline: none;
  border-color: var(--zd-chk-focused-border-color);
  box-shadow: var(--zd-chk-focused-box-shadow);
}

@custom-selector :--chk-active /* [2] */
  .c-chk.is-active.is-active > .c-chk__label,
  .c-chk > .c-chk__label:active.c-chk__label:active;

:--chk-active::after {
  transition: var(--zd-chk-active-transition);
  border-color: var(--zd-chk-active-border-color);
  background-color: var(--zd-chk-active-background-color);
}

@custom-selector :--chk-checked-active
  .c-chk.is-checked.is-active:not(.is-disabled) > .c-chk__label,
  .c-chk.is-active > .c-chk__input:enabled:checked ~ .c-chk__label,
  .c-chk:not(.is-disabled) >
  .c-chk__input:enabled:checked ~ .c-chk__label:active;

:--chk-checked-active::after {
  border-color: var(--zd-chk-checked-active-border-color);
  background-color: var(--zd-chk-checked-active-background-color);
}

@custom-selector :--chk-disabled /* [2] */
  .c-chk.is-disabled.is-disabled.is-disabled > .c-chk__label,
  .c-chk > .c-chk__input:disabled.c-chk__input:disabled ~ .c-chk__label;

:--chk-disabled {
  cursor: default;
}

:--chk-disabled::before {
  border-color: var(--zd-chk-disabled-background-color);
}

:--chk-disabled::after {
  border-color: transparent;
  box-shadow: none;
  background-color: var(--zd-chk-disabled-background-color);
}
/* stylelint-enable no-descending-specificity */
